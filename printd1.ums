.section init
    .zero r0
    .temps r6, r7

.section text

print:
    push r1 on stack r2

    # Save current stack pointer (top of stack)
    r1 := r3

    # Check if stack is empty
    push r5 on stack r2
    if (r3 == endvalstack) goto emptyStack using r5

printLoop:
    # Stop when we reach the end of the stack
    if (r3 == endvalstack) goto afterPrint

    r5 := m[r0][r3]
    r3 := r3 + 1  # Move to next stack element

    push r3 on stack r2  # Save current position
    push r1 on stack r2  # Save end marker

    # Print current number
    if (r5 == r0) goto zero using r1
    if (r5 >s r0) goto positive using r1
    goto negative

continuePrint:
    pop r1 off stack r2  # Restore end marker
    pop r3 off stack r2  # Restore current position
    
    # Print space between numbers unless it's the last one
    if (r3 == endvalstack) goto printLoop
    output ' '
    goto printLoop

emptyStack:
    pop r5 off stack r2
    output ">>> (empty)"
    goto afterPrint

zero:
    output '0'
    goto continuePrint

positive:
    r7 := r5  # We'll use r7 for digit extraction
    r6 := endvalstack  # We'll use r6 to count digits
    
digitLoop:
    r4 := r7 mod 10
    push r4 on stack r6
    
    r7 := r7 / 10
    if (r7 == r0) goto printDigits
    goto digitLoop

printDigits:
    pop r4 off stack r6
    r4 := r4 + 48
    output r4
    if (r6 != endvalstack) goto printDigits
    goto continuePrint
    
negative:
    output '-'
    r5 := -r5
    goto positive

afterPrint:
    pop r1 off stack r2
    output '\n'
    goto waiting